{"version":3,"sources":["webpack:///./routes/settings/index.js"],"names":["initialValues","name","dob","profession","designation","onSubmit","values","console","log","validate","errors","test","length","Profile","formik","useFormik","class","handleSubmit","htmlFor","id","type","onChange","handleChange","onBlur","handleBlur","value","touched","onClick","resetForm"],"mappings":"2FAAA,mCAEMA,EAAgB,CACpBC,KAAM,GACNC,IAAK,GACLC,WAAY,GACZC,YAAa,IAGTC,EAAW,SAACC,GAChBC,QAAQC,IAAIF,IAGRG,EAAW,SAACH,GAChB,IAAII,EAAS,GAoCb,OAlCKJ,EAAOL,KAEA,cAAcU,KAAKL,EAAOL,MAE3BK,EAAOL,KAAKW,QAAU,KAC/BF,EAAOT,KAAO,+CAFdS,EAAOT,KAAO,0DAFdS,EAAOT,KAAO,WAOXK,EAAOJ,IAGT,0DAA0DS,KAAKL,EAAOJ,OAEvEQ,EAAOR,IAAM,4BAJbQ,EAAOR,IAAM,WAOVI,EAAOH,WAEA,cAAcQ,KAAKL,EAAOH,YAG3BG,EAAOH,WAAWS,QAAU,KACrCF,EAAOP,WAAa,qDAHpBO,EAAOP,WACL,gEAHFO,EAAOP,WAAa,WAQjBG,EAAOF,YAEA,cAAcO,KAAKL,EAAOF,aAG3BE,EAAOF,YAAYQ,QAAU,KACtCF,EAAON,YAAc,sDAHrBM,EAAON,YACL,iEAHFM,EAAON,YAAc,WAQhBM,GA2HMG,UAxHC,WACd,IAAMC,EAASC,YAAU,CACvBf,gBACAK,WACAI,aAGF,OACE,SAAKO,MAAM,kCACT,QAAIA,MAAM,6EAAV,uBAGA,UACEA,MAAM,mFACNX,SAAUS,EAAOG,cAEjB,SAAKD,MAAM,QACT,WAAOA,MAAM,OAAOE,QAAQ,QAA5B,QAGA,WACEC,GAAG,OACHH,MAAM,wFACNI,KAAK,OACLC,SAAUP,EAAOQ,aACjBC,OAAQT,EAAOU,WACfC,MAAOX,EAAOR,OAAOL,OAEtBa,EAAOY,QAAQzB,MAAQa,EAAOJ,OAAOT,KACpC,UAAMe,MAAM,8BAA8BF,EAAOJ,OAAOT,MAExD,UAAMe,MAAM,+BAAZ,wCAKJ,SAAKA,MAAM,QACT,WAAOA,MAAM,QAAQE,QAAQ,OAA7B,OAGA,WACEC,GAAG,MACHH,MAAM,yFACNI,KAAK,OACLC,SAAUP,EAAOQ,aACjBC,OAAQT,EAAOU,WACfC,MAAOX,EAAOR,OAAOJ,MAEtBY,EAAOY,QAAQxB,KAAOY,EAAOJ,OAAOR,IACnC,UAAMc,MAAM,8BAA8BF,EAAOJ,OAAOR,KAExD,UAAMc,MAAM,+BAAZ,0CAKJ,SAAKA,MAAM,QACT,WAAOA,MAAM,QAAQE,QAAQ,cAA7B,cAGA,WACEC,GAAG,aACHH,MAAM,yFACNI,KAAK,OACLC,SAAUP,EAAOQ,aACjBC,OAAQT,EAAOU,WACfC,MAAOX,EAAOR,OAAOH,aAEtBW,EAAOY,QAAQvB,YAAcW,EAAOJ,OAAOP,WAC1C,UAAMa,MAAM,8BACTF,EAAOJ,OAAOP,YAGjB,UAAMa,MAAM,+BAAZ,8CAKJ,SAAKA,MAAM,QACT,WAAOA,MAAM,QAAQE,QAAQ,eAA7B,eAGA,WACEC,GAAG,cACHH,MAAM,yFACNI,KAAK,OACLC,SAAUP,EAAOQ,aACjBC,OAAQT,EAAOU,WACfC,MAAOX,EAAOR,OAAOF,cAEtBU,EAAOY,QAAQtB,aAAeU,EAAOJ,OAAON,YAC3C,UAAMY,MAAM,8BACTF,EAAOJ,OAAON,aAGjB,UAAMY,MAAM,+BAAZ,+CAKJ,SAAKA,MAAM,0BACT,YACEI,KAAK,QACLJ,MAAM,8JACNW,QAASb,EAAOc,WAHlB,UAOA,YACER,KAAK,SACLJ,MAAM,uKAFR,e","file":"route-settings.chunk.ac0d4.js","sourcesContent":["import { useFormik } from \"formik\";\n\nconst initialValues = {\n  name: \"\",\n  dob: \"\",\n  profession: \"\",\n  designation: \"\",\n};\n\nconst onSubmit = (values) => {\n  console.log(values);\n};\n\nconst validate = (values) => {\n  let errors = {};\n\n  if (!values.name) {\n    errors.name = \"Required\";\n  } else if (!/^[a-zA-Z]+$/.test(values.name)) {\n    errors.name = \"You name should not contains any number or special char\";\n  } else if (values.name.length >= 30) {\n    errors.name = \"You name should not be greater then 30 char\";\n  }\n\n  if (!values.dob) {\n    errors.dob = \"Required\";\n  } else if (\n    !/([12]\\d{3}(\\/)(0[1-9]|1[0-2])(\\/)(0[1-9]|[12]\\d|3[01]))/.test(values.dob)\n  ) {\n    errors.dob = \"Please enter a valid dob\";\n  }\n\n  if (!values.profession) {\n    errors.profession = \"Required\";\n  } else if (!/^[a-zA-Z]+$/.test(values.profession)) {\n    errors.profession =\n      \"You profession should not contains any number or special char\";\n  } else if (values.profession.length >= 30) {\n    errors.profession = \"You profession should not be greater then 30 char\";\n  }\n\n  if (!values.designation) {\n    errors.designation = \"Required\";\n  } else if (!/^[a-zA-Z]+$/.test(values.designation)) {\n    errors.designation =\n      \"You designation should not contains any number or special char\";\n  } else if (values.designation.length >= 30) {\n    errors.designation = \"You designation should not be greater then 30 char\";\n  }\n\n  return errors;\n};\n\nconst Profile = () => {\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate,\n  });\n\n  return (\n    <div class=\"flex flex-col items-center m-6\">\n      <h2 class=\" inline-block text-2xl font-bold text-center text-gray-900 rounded-lg p-4\">\n        Profile Information\n      </h2>\n      <form\n        class=\"grid grid-col gap-6 w-full max-w-lg my-4 border-2 border-gray-900 rounded-lg p-6\"\n        onSubmit={formik.handleSubmit}\n      >\n        <div class=\"grid\">\n          <label class=\"mb-2\" htmlFor=\"name\">\n            Name\n          </label>\n          <input\n            id=\"name\"\n            class=\"border-2 border-gray-900 rounded-lg p-2 focus:outline-none  focus:shadow-outline-gray\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n          />\n          {formik.touched.name && formik.errors.name ? (\n            <span class=\" text-sm text-red-600 mt-2\">{formik.errors.name}</span>\n          ) : (\n            <span class=\" text-sm text-gray-600 mt-2\">\n              Your name must contains only letter\n            </span>\n          )}\n        </div>\n        <div class=\"grid\">\n          <label class=\" mb-2\" htmlFor=\"dob\">\n            DOB\n          </label>\n          <input\n            id=\"dob\"\n            class=\"border-2 border-gray-900 rounded-lg p-2  focus:outline-none  focus:shadow-outline-gray\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.dob}\n          />\n          {formik.touched.dob && formik.errors.dob ? (\n            <span class=\" text-sm text-red-600 mt-2\">{formik.errors.dob}</span>\n          ) : (\n            <span class=\" text-sm text-gray-600 mt-2\">\n              Your dob must be in YYYY/MM/DD format\n            </span>\n          )}\n        </div>\n        <div class=\"grid\">\n          <label class=\" mb-2\" htmlFor=\"profession\">\n            Profession\n          </label>\n          <input\n            id=\"profession\"\n            class=\"border-2 border-gray-900 rounded-lg p-2  focus:outline-none  focus:shadow-outline-gray\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.profession}\n          />\n          {formik.touched.profession && formik.errors.profession ? (\n            <span class=\" text-sm text-red-600 mt-2\">\n              {formik.errors.profession}\n            </span>\n          ) : (\n            <span class=\" text-sm text-gray-600 mt-2\">\n              Your profession must contains only letter\n            </span>\n          )}\n        </div>\n        <div class=\"grid\">\n          <label class=\" mb-2\" htmlFor=\"designation\">\n            Designation\n          </label>\n          <input\n            id=\"designation\"\n            class=\"border-2 border-gray-900 rounded-lg p-2  focus:outline-none  focus:shadow-outline-gray\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.designation}\n          />\n          {formik.touched.designation && formik.errors.designation ? (\n            <span class=\" text-sm text-red-600 mt-2\">\n              {formik.errors.designation}\n            </span>\n          ) : (\n            <span class=\" text-sm text-gray-600 mt-2\">\n              Your designation must contains only letter\n            </span>\n          )}\n        </div>\n        <div class=\"grid grid-cols-2 gap-4\">\n          <button\n            type=\"reset\"\n            class=\" bg-red-600 px-4 py-2 rounded-lg text-white font-bold hover:bg-red-700 transition duration-200 focus:bg-red-700 focus:outline-none focus:shadow-outline-red\"\n            onClick={formik.resetForm}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            class=\" bg-green-600 px-4 py-2 rounded-lg text-white font-bold hover:bg-green-700 transition duration-200 focus:bg-green-700 focus:outline-none focus:shadow-outline-green\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}